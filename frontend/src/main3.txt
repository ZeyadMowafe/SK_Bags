import React, { useState, useEffect, useRef } from 'react';

// Header Component
const Header = ({ cartCount, toggleCart, scrollToProducts, scrollToAbout, scrollToContact }) => {
  const [isScrolled, setIsScrolled] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 50);
    };
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  return (
    <header className={`fixed w-full z-50 transition-all duration-500 ${
      isScrolled 
        ? 'bg-white/95 backdrop-blur-md shadow-lg py-3' 
        : 'bg-transparent py-6'
    }`}>
      <nav className="container mx-auto px-4 flex justify-between items-center">
        <div className="text-2xl font-bold tracking-wider">
          <span className="text-black">HAND</span>
          <span className="text-gray-600">CRAFT</span>
        </div>
        
        <div className="hidden md:flex space-x-8">
          <button 
            onClick={scrollToProducts}
            className="text-gray-700 hover:text-black transition-colors duration-300 font-medium tracking-wide uppercase text-sm relative group"
          >
            Products
            <span className="absolute -bottom-1 left-0 w-0 h-0.5 bg-black transition-all duration-300 group-hover:w-full"></span>
          </button>
          <button 
            onClick={scrollToAbout}
            className="text-gray-700 hover:text-black transition-colors duration-300 font-medium tracking-wide uppercase text-sm relative group"
          >
            About
            <span className="absolute -bottom-1 left-0 w-0 h-0.5 bg-black transition-all duration-300 group-hover:w-full"></span>
          </button>
          <button 
            onClick={scrollToContact}
            className="text-gray-700 hover:text-black transition-colors duration-300 font-medium tracking-wide uppercase text-sm relative group"
          >
            Contact
            <span className="absolute -bottom-1 left-0 w-0 h-0.5 bg-black transition-all duration-300 group-hover:w-full"></span>
          </button>
        </div>

        <button
          onClick={toggleCart}
          className="relative bg-black text-white px-6 py-3 font-medium tracking-wide uppercase text-sm transition-all duration-300 hover:bg-gray-800 transform hover:-translate-y-0.5 hover:shadow-lg group"
        >
          <span className="flex items-center space-x-2">
            <span>Cart</span>
            {cartCount > 0 && (
              <span className="bg-white text-black rounded-full w-5 h-5 flex items-center justify-center text-xs font-bold animate-pulse">
                {cartCount}
              </span>
            )}
          </span>
          <div className="absolute inset-0 bg-gray-700 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-left -z-10"></div>
        </button>
      </nav>
    </header>
  );
};

// Product Card Component
const ProductCard = ({ product, onAddToCart, onViewDetails }) => {
  const [isHovered, setIsHovered] = useState(false);

  return (
    <div 
      className="bg-white shadow-lg hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 group overflow-hidden"
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
    >
      <div className="relative overflow-hidden">
        <img
          src={product.image_url}
          alt={product.name}
          className={`w-full h-64 object-cover transition-all duration-700 ${
            isHovered ? 'scale-110' : 'scale-100'
          }`}
        />
        <div className={`absolute inset-0 bg-black/20 transition-opacity duration-300 ${
          isHovered ? 'opacity-100' : 'opacity-0'
        }`}></div>
        
        {/* Price tag */}
        <div className="absolute top-4 right-4 bg-white text-black px-3 py-1 text-sm font-bold shadow-lg">
          ${product.price}
        </div>
        
        {/* Quick view button */}
        <button
          onClick={onViewDetails}
          className={`absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white text-black px-6 py-3 font-medium tracking-wide uppercase text-sm transition-all duration-300 ${
            isHovered ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-4'
          } hover:bg-gray-100`}
        >
          Quick View
        </button>
      </div>
      
      <div className="p-6">
        <h3 className="text-lg font-semibold mb-2 text-gray-900 group-hover:text-black transition-colors duration-300">
          {product.name}
        </h3>
        <p className="text-gray-600 text-sm mb-4 line-clamp-2 leading-relaxed">
          {product.description}
        </p>
        
        <div className="flex justify-between items-center">
          <span className="text-sm text-gray-500 uppercase tracking-wide">
            {product.category}
          </span>
          <button
            onClick={() => onAddToCart(product)}
            className="bg-black text-white px-4 py-2 text-sm font-medium tracking-wide uppercase transition-all duration-300 hover:bg-gray-800 transform hover:scale-105 hover:shadow-md"
          >
            Add to Cart
          </button>
        </div>
      </div>
    </div>
  );
};

// Modal Components
const CartModal = ({ cart, updateQuantity, removeFromCart, getTotalPrice, onClose, onCheckout }) => {
  useEffect(() => {
    document.body.style.overflow = 'hidden';
    return () => {
      document.body.style.overflow = 'unset';
    };
  }, []);

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4 animate-fade-in">
      <div className="bg-white w-full max-w-2xl max-h-[80vh] overflow-hidden shadow-2xl animate-slide-up">
        <div className="p-6 border-b border-gray-200">
          <div className="flex justify-between items-center">
            <h2 className="text-2xl font-bold text-gray-900 tracking-wide">Your Cart</h2>
            <button
              onClick={onClose}
              className="text-gray-500 hover:text-gray-700 text-2xl transition-colors duration-200"
            >
              √ó
            </button>
          </div>
        </div>
        
        <div className="p-6 overflow-y-auto max-h-96">
          {cart.length === 0 ? (
            <div className="text-center py-12">
              <div className="text-6xl mb-4 text-gray-300">üõçÔ∏è</div>
              <p className="text-gray-500 text-lg">Your cart is empty</p>
            </div>
          ) : (
            <div className="space-y-4">
              {cart.map((item) => (
                <div key={item.id} className="flex items-center space-x-4 p-4 bg-gray-50 hover:bg-gray-100 transition-colors duration-200">
                  <img src={item.image_url} alt={item.name} className="w-16 h-16 object-cover" />
                  <div className="flex-1">
                    <h3 className="font-medium text-gray-900">{item.name}</h3>
                    <p className="text-gray-600 text-sm">${item.price}</p>
                  </div>
                  <div className="flex items-center space-x-2">
                    <button
                      onClick={() => updateQuantity(item.id, item.quantity - 1)}
                      className="w-8 h-8 bg-gray-200 hover:bg-gray-300 transition-colors duration-200 flex items-center justify-center"
                    >
                      -
                    </button>
                    <span className="w-12 text-center font-medium">{item.quantity}</span>
                    <button
                      onClick={() => updateQuantity(item.id, item.quantity + 1)}
                      className="w-8 h-8 bg-gray-200 hover:bg-gray-300 transition-colors duration-200 flex items-center justify-center"
                    >
                      +
                    </button>
                  </div>
                  <button
                    onClick={() => removeFromCart(item.id)}
                    className="text-red-500 hover:text-red-700 transition-colors duration-200"
                  >
                    Remove
                  </button>
                </div>
              ))}
            </div>
          )}
        </div>
        
        {cart.length > 0 && (
          <div className="p-6 border-t border-gray-200 bg-gray-50">
            <div className="flex justify-between items-center mb-4">
              <span className="text-xl font-bold text-gray-900">Total: ${getTotalPrice().toFixed(2)}</span>
            </div>
            <button
              onClick={onCheckout}
              className="w-full bg-black text-white py-3 font-medium tracking-wide uppercase transition-all duration-300 hover:bg-gray-800 transform hover:scale-[1.02]"
            >
              Proceed to Checkout
            </button>
          </div>
        )}
      </div>
    </div>
  );
};

const CheckoutModal = ({ customerInfo, setCustomerInfo, cart, getTotalPrice, onClose, onSubmit }) => {
  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4 animate-fade-in">
      <div className="bg-white w-full max-w-lg max-h-[80vh] overflow-y-auto shadow-2xl animate-slide-up">
        <div className="p-6 border-b border-gray-200">
          <div className="flex justify-between items-center">
            <h2 className="text-2xl font-bold text-gray-900 tracking-wide">Checkout</h2>
            <button onClick={onClose} className="text-gray-500 hover:text-gray-700 text-2xl">√ó</button>
          </div>
        </div>
        
        <div className="p-6">
          <form onSubmit={(e) => { e.preventDefault(); onSubmit(); }}>
            <div className="space-y-4 mb-6">
              <input
                type="text"
                placeholder="Full Name"
                value={customerInfo.name}
                onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}
                className="w-full p-3 bg-gray-50 border border-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent transition-all duration-200"
                required
              />
              <input
                type="email"
                placeholder="Email Address"
                value={customerInfo.email}
                onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}
                className="w-full p-3 bg-gray-50 border border-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent transition-all duration-200"
                required
              />
              <input
                type="tel"
                placeholder="Phone Number"
                value={customerInfo.phone}
                onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}
                className="w-full p-3 bg-gray-50 border border-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent transition-all duration-200"
                required
              />
              <textarea
                placeholder="Delivery Address"
                value={customerInfo.address}
                onChange={(e) => setCustomerInfo({...customerInfo, address: e.target.value})}
                className="w-full p-3 bg-gray-50 border border-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent transition-all duration-200 h-24 resize-none"
                required
              />
            </div>
            
            <div className="mb-6">
              <h3 className="font-semibold mb-3 text-gray-900">Order Summary</h3>
              {cart.map((item) => (
                <div key={item.id} className="flex justify-between py-2 text-sm text-gray-600">
                  <span>{item.name} √ó {item.quantity}</span>
                  <span>${(item.price * item.quantity).toFixed(2)}</span>
                </div>
              ))}
              <div className="border-t pt-2 mt-2">
                <div className="flex justify-between font-bold text-lg text-gray-900">
                  <span>Total</span>
                  <span>${getTotalPrice().toFixed(2)}</span>
                </div>
              </div>
            </div>
            
            <button
              type="submit"
              className="w-full bg-black text-white py-3 font-medium tracking-wide uppercase transition-all duration-300 hover:bg-gray-800 transform hover:scale-[1.02]"
            >
              Place Order
            </button>
          </form>
        </div>
      </div>
    </div>
  );
};

const ProductModal = ({ product, onClose, onAddToCart }) => {
  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4 animate-fade-in">
      <div className="bg-white w-full max-w-4xl max-h-[80vh] overflow-hidden shadow-2xl animate-slide-up">
        <div className="flex flex-col md:flex-row">
          <div className="md:w-1/2">
            <img src={product.image_url} alt={product.name} className="w-full h-64 md:h-full object-cover" />
          </div>
          <div className="md:w-1/2 p-8">
            <div className="flex justify-between items-start mb-4">
              <h2 className="text-3xl font-bold text-gray-900">{product.name}</h2>
              <button onClick={onClose} className="text-gray-500 hover:text-gray-700 text-2xl">√ó</button>
            </div>
            <p className="text-gray-600 mb-6 leading-relaxed">{product.description}</p>
            <div className="mb-6">
              <span className="text-3xl font-bold text-gray-900">${product.price}</span>
              <span className="text-sm text-gray-500 ml-2 uppercase tracking-wide">{product.category}</span>
            </div>
            <div className="mb-6">
              <span className="text-sm text-gray-600">Stock: {product.stock_quantity} available</span>
            </div>
            <button
              onClick={() => onAddToCart(product)}
              className="w-full bg-black text-white py-3 font-medium tracking-wide uppercase transition-all duration-300 hover:bg-gray-800 transform hover:scale-[1.02]"
            >
              Add to Cart
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

// Footer Component
const Footer = () => (
  <footer className="bg-gray-900 text-white py-12">
    <div className="container mx-auto px-4 text-center">
      <div className="mb-8">
        <div className="text-2xl font-bold tracking-wider mb-4">
          <span className="text-white">HAND</span>
          <span className="text-gray-400">CRAFT</span>
        </div>
        <p className="text-gray-400 max-w-md mx-auto">
          Crafting premium handmade bags with attention to detail and quality materials.
        </p>
      </div>
      
      <div className="flex justify-center space-x-8 mb-8">
        <a href="#" className="text-gray-400 hover:text-white transition-colors duration-300">Privacy Policy</a>
        <a href="#" className="text-gray-400 hover:text-white transition-colors duration-300">Terms of Service</a>
        <a href="#" className="text-gray-400 hover:text-white transition-colors duration-300">Shipping Info</a>
      </div>
      
      <div className="border-t border-gray-700 pt-8">
        <p className="text-gray-400 text-sm">¬© 2025 HandCraft Bags. All rights reserved.</p>
      </div>
    </div>
  </footer>
);

// Main App Component
const MainApp = () => {
  const [products, setProducts] = useState([]);
  const [cart, setCart] = useState([]);
  const [showCart, setShowCart] = useState(false);
  const [showCheckout, setShowCheckout] = useState(false);
  const [selectedProduct, setSelectedProduct] = useState(null);
  const [customerInfo, setCustomerInfo] = useState({
    name: '', email: '', phone: '', address: ''
  });
  const [isLoading, setIsLoading] = useState(true);
  
  const productsRef = useRef(null);
  const aboutRef = useRef(null);
  const contactRef = useRef(null);

  // Fetch products on component mount
  useEffect(() => {
    const fetchProducts = async () => {
      try {
        setIsLoading(true);
        // Simulating API call with dummy data
        setTimeout(() => {
          setProducts([
            {
              id: 1,
              name: "Premium Leather Handbag",
              description: "Elegant handcrafted leather bag made with premium materials and attention to detail",
              price: 299.99,
              image_url: "https://images.unsplash.com/photo-1548036328-c9fa89d128fa?w=400&h=400&fit=crop",
              category: "Handbags",
              stock_quantity: 10
            },
            {
              id: 2,
              name: "Classic Crossbody",
              description: "Practical and comfortable crossbody bag perfect for daily use and adventures",
              price: 199.99,
              image_url: "https://images.unsplash.com/photo-1553062407-98eeb64c6a62?w=400&h=400&fit=crop",
              category: "Crossbody",
              stock_quantity: 15
            },
            {
              id: 3,
              name: "Evening Clutch",
              description: "Sophisticated clutch bag designed for special occasions and elegant evenings",
              price: 399.99,
              image_url: "https://images.unsplash.com/photo-1594223274512-ad4803739b7c?w=400&h=400&fit=crop",
              category: "Clutch",
              stock_quantity: 8
            },
            {
              id: 4,
              name: "Travel Tote",
              description: "Spacious and durable tote bag perfect for travel and everyday essentials",
              price: 499.99,
              image_url: "https://images.unsplash.com/photo-1584917865442-de89df76afd3?w=400&h=400&fit=crop",
              category: "Travel",
              stock_quantity: 5
            },
            {
              id: 5,
              name: "Urban Backpack",
              description: "Modern and functional backpack designed for urban lifestyle and comfort",
              price: 249.99,
              image_url: "https://images.unsplash.com/photo-1553062407-98eeb64c6a62?w=400&h=400&fit=crop",
              category: "Backpack",
              stock_quantity: 12
            },
            {
              id: 6,
              name: "Mini Shoulder Bag",
              description: "Compact and stylish mini bag perfect for essentials and casual outings",
              price: 179.99,
              image_url: "https://images.unsplash.com/photo-1594223274512-ad4803739b7c?w=400&h=400&fit=crop",
              category: "Mini Bags",
              stock_quantity: 7
            }
          ]);
          setIsLoading(false);
        }, 1000);
      } catch (error) {
        console.error('Error fetching products:', error);
        setIsLoading(false);
      }
    };

    fetchProducts();
  }, []);

  const addToCart = (product) => {
    setCart(prevCart => {
      const existingItem = prevCart.find(item => item.id === product.id);
      if (existingItem) {
        return prevCart.map(item =>
          item.id === product.id
            ? { ...item, quantity: item.quantity + 1 }
            : item
        );
      } else {
        return [...prevCart, { ...product, quantity: 1 }];
      }
    });
  };

  const updateQuantity = (productId, newQuantity) => {
    if (newQuantity <= 0) {
      removeFromCart(productId);
      return;
    }
    
    setCart(prevCart =>
      prevCart.map(item =>
        item.id === productId
          ? { ...item, quantity: newQuantity }
          : item
      )
    );
  };

  const removeFromCart = (productId) => {
    setCart(prevCart => prevCart.filter(item => item.id !== productId));
  };

  const getTotalPrice = () => {
    return cart.reduce((total, item) => total + (item.price * item.quantity), 0);
  };

  const handleCheckout = async () => {
    try {
      // Simulate order submission
      setTimeout(() => {
        setCart([]);
        setCustomerInfo({ name: '', email: '', phone: '', address: '' });
        setShowCheckout(false);
        setShowCart(false);
        alert('Order submitted successfully! We will contact you soon.');
      }, 1000);
    } catch (error) {
      console.error('Error creating order:', error);
      alert('Error submitting order. Please try again.');
    }
  };

  const cartCount = cart.reduce((total, item) => total + item.quantity, 0);

  return (
    <div className="min-h-screen bg-white">
      <Header
        cartCount={cartCount}
        toggleCart={() => setShowCart(true)}
        scrollToProducts={() => productsRef.current?.scrollIntoView({ behavior: 'smooth' })}
        scrollToAbout={() => aboutRef.current?.scrollIntoView({ behavior: 'smooth' })}
        scrollToContact={() => contactRef.current?.scrollIntoView({ behavior: 'smooth' })}
      />

      {/* Hero Section */}
      <section className="relative min-h-screen bg-gradient-to-br from-gray-50 via-white to-gray-100 flex items-center overflow-hidden">
        {/* Background Pattern */}
        <div className="absolute inset-0 opacity-5">
          <div className="absolute top-20 left-20 w-96 h-96 border border-gray-400 rounded-full animate-pulse-slow"></div>
          <div className="absolute bottom-20 right-20 w-64 h-64 border border-gray-400 animate-pulse-slow delay-1000"></div>
          <div className="absolute top-1/3 right-1/4 w-32 h-32 border border-gray-400 rotate-45 animate-pulse-slow delay-2000"></div>
        </div>

        <div className="container mx-auto px-4 py-20">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            {/* Text Content */}
            <div className="text-center lg:text-left animate-fade-in-up">
              <h1 className="text-6xl lg:text-7xl font-light mb-6 leading-tight">
                <span className="block text-black font-bold">HANDMADE</span>
                <span className="block text-gray-600 font-light">LUXURY</span>
                <span className="block text-black font-bold border-b-4 border-black pb-2 inline-block">BAGS</span>
              </h1>
              
              <p className="text-xl text-gray-600 mb-8 max-w-lg leading-relaxed">
                Premium handcrafted bags made with exceptional attention to detail 
                and the finest materials by skilled artisans.
              </p>
              
              <div className="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start">
                <button
                  onClick={() => productsRef.current?.scrollIntoView({ behavior: 'smooth' })}
                  className="bg-black text-white px-8 py-4 font-medium tracking-wider uppercase transition-all duration-500 hover:bg-gray-800 transform hover:-translate-y-1 hover:shadow-xl group relative overflow-hidden"
                >
                  <span className="relative z-10">Explore Collection</span>
                  <div className="absolute inset-0 bg-gray-700 transform -translate-x-full group-hover:translate-x-0 transition-transform duration-500"></div>
                </button>
                
                <button 
                  onClick={() => aboutRef.current?.scrollIntoView({ behavior: 'smooth' })}
                  className="border-2 border-gray-300 text-gray-700 px-8 py-4 font-medium tracking-wider uppercase transition-all duration-500 hover:border-black hover:text-black transform hover:-translate-y-1 hover:shadow-xl"
                >
                  Our Story
                </button>
              </div>
            </div>

            {/* Hero Image */}
            <div className="flex justify-center lg:justify-end animate-fade-in-up delay-300">
              <div className="relative">
                <div className="absolute inset-0 bg-black/10 blur-3xl transform translate-x-4 translate-y-4"></div>
                <img
                  src="https://images.unsplash.com/photo-1584917865442-de89df76afd3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=800&q=80"
                  alt="Luxury handmade bag"
                  className="relative w-96 h-96 object-cover shadow-2xl transform hover:scale-105 transition-all duration-700 hover:rotate-1"
                />
                
                <div className="absolute -top-6 -right-6 bg-black text-white px-4 py-2 text-sm font-bold tracking-wide uppercase shadow-lg animate-bounce-gentle">
                  Premium Quality
                </div>
                
                <div className="absolute -bottom-6 -left-6 bg-white text-black px-4 py-2 text-sm font-bold tracking-wide uppercase shadow-lg border-2 border-gray-200 animate-bounce-gentle delay-500">
                  Handcrafted
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Scroll Indicator */}
        <div className="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
          <div className="w-6 h-10 border-2 border-gray-400 rounded-full flex justify-center">
            <div className="w-1 h-3 bg-gray-400 rounded-full mt-2 animate-scroll-indicator"></div>
          </div>
        </div>
      </section>

      {/* Products Section */}
      <section ref={productsRef} className="py-20 bg-gray-50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16 animate-fade-in-up">
            <h2 className="text-5xl font-light text-gray-900 mb-4">
              <span className="font-bold">Our</span> Collection
            </h2>
            <div className="w-24 h-1 bg-black mx-auto mb-6"></div>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed">
              Discover our carefully curated selection of premium handmade bags, 
              each piece telling its own story of craftsmanship and quality.
            </p>
          </div>
          
          {isLoading ? (
            <div className="flex justify-center items-center h-64">
              <div className="relative">
                <div className="w-16 h-16 border-4 border-gray-200 border-t-black rounded-full animate-spin"></div>
                <div className="absolute inset-0 w-16 h-16 border-4 border-transparent border-b-gray-400 rounded-full animate-spin-reverse"></div>
              </div>
            </div>
          ) : (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {products.map((product, index) => (
                <div 
                  key={product.id} 
                  className="animate-fade-in-up"
                  style={{ animationDelay: `${index * 150}ms` }}
                >
                  <ProductCard
                    product={product}
                    onAddToCart={addToCart}
                    onViewDetails={() => setSelectedProduct(product)}
                  />
                </div>
              ))}
            </div>
          )}
        </div>
      </section>

      {/* About Section */}
      <section ref={aboutRef} className="py-20 bg-white">
        <div className="container mx-auto px-4">
          <div className="max-w-6xl mx-auto">
            <div className="text-center mb-16 animate-fade-in-up">
              <h2 className="text-5xl font-light text-gray-900 mb-4">
                <span className="font-bold">About</span> Our Craft
              </h2>
              <div className="w-24 h-1 bg-black mx-auto mb-6"></div>
              <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
                We are specialists in creating unique and elegant handmade bags. We use the finest materials 
                and apply the latest techniques to ensure high quality and distinctive design. Each piece of our 
                products carries a unique signature of creativity and elegance.
              </p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              <div className="text-center p-8 bg-gray-50 hover:bg-white hover:shadow-lg transition-all duration-500 transform hover:-translate-y-2 group">
                <div className="text-5xl mb-6 group-hover:scale-110 transition-transform duration-300">üé®</div>
                <h3 className="text-xl font-bold mb-4 text-gray-900">Unique Design</h3>
                <p className="text-gray-600 leading-relaxed">
                  Our designs carry a distinctive artistic signature that suits all tastes and preferences.
                </p>
              </div>
              
              <div className="text-center p-8 bg-black text-white hover:bg-gray-800 transition-all duration-500 transform hover:-translate-y-2 group">
                <div className="text-5xl mb-6 group-hover:scale-110 transition-transform duration-300">‚úã</div>
                <h3 className="text-xl font-bold mb-4">Handcrafted</h3>
                <p className="text-gray-300 leading-relaxed">
                  Every piece is handmade with high precision and attention to detail by skilled artisans.
                </p>
              </div>
              
              <div className="text-center p-8 bg-gray-50 hover:bg-white hover:shadow-lg transition-all duration-500 transform hover:-translate-y-2 group">
                <div className="text-5xl mb-6 group-hover:scale-110 transition-transform duration-300">‚≠ê</div>
                <h3 className="text-xl font-bold mb-4 text-gray-900">Premium Quality</h3>
                <p className="text-gray-600 leading-relaxed">
                  We use the best materials to ensure durability and exceptional quality in every product.
                </p>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Contact Section */}
      <section ref={contactRef} className="py-20 bg-gray-100">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto">
            <div className="text-center mb-16 animate-fade-in-up">
              <h2 className="text-5xl font-light text-gray-900 mb-4">
                <span className="font-bold">Get</span> In Touch
              </h2>
              <div className="w-24 h-1 bg-black mx-auto mb-6"></div>
              <p className="text-xl text-gray-600 leading-relaxed">
                Have questions about our products? We'd love to hear from you.
              </p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-12">
              <div className="text-center p-6 bg-white hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1">
                <div className="text-3xl mb-4">üìß</div>
                <h3 className="text-lg font-bold mb-2 text-gray-900">Email</h3>
                <p className="text-gray-600">info@handcraft.com</p>
              </div>
              
              <div className="text-center p-6 bg-black text-white hover:bg-gray-800 transition-all duration-300 transform hover:-translate-y-1">
                <div className="text-3xl mb-4">üì±</div>
                <h3 className="text-lg font-bold mb-2">Phone</h3>
                <p className="text-gray-300">+20 123 456 7890</p>
              </div>
              
              <div className="text-center p-6 bg-white hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1">
                <div className="text-3xl mb-4">üìç</div>
                <h3 className="text-lg font-bold mb-2 text-gray-900">Location</h3>
                <p className="text-gray-600">Cairo, Egypt</p>
              </div>
            </div>
            
            <div className="bg-white p-8 shadow-lg">
              <h3 className="text-2xl font-bold mb-6 text-center text-gray-900">Send us a Message</h3>
              <form className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <input 
                    type="text" 
                    placeholder="Your Name" 
                    className="p-4 bg-gray-50 border border-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent transition-all duration-200"
                  />
                  <input 
                    type="email" 
                    placeholder="Your Email" 
                    className="p-4 bg-gray-50 border border-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent transition-all duration-200"
                  />
                </div>
                <textarea 
                  placeholder="Your Message" 
                  rows="6"
                  className="w-full p-4 bg-gray-50 border border-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-transparent transition-all duration-200 resize-none"
                ></textarea>
                <button 
                  type="submit"
                  className="w-full bg-black text-white py-4 font-medium tracking-wider uppercase transition-all duration-300 hover:bg-gray-800 transform hover:-translate-y-1 hover:shadow-lg"
                >
                  Send Message
                </button>
              </form>
            </div>
          </div>
        </div>
      </section>

      <Footer />

      {/* Modals */}
      {showCart && (
        <CartModal
          cart={cart}
          updateQuantity={updateQuantity}
          removeFromCart={removeFromCart}
          getTotalPrice={getTotalPrice}
          onClose={() => setShowCart(false)}
          onCheckout={() => {
            setShowCart(false);
            setShowCheckout(true);
          }}
        />
      )}

      {showCheckout && (
        <CheckoutModal
          customerInfo={customerInfo}
          setCustomerInfo={setCustomerInfo}
          cart={cart}
          getTotalPrice={getTotalPrice}
          onClose={() => setShowCheckout(false)}
          onSubmit={handleCheckout}
        />
      )}

      {selectedProduct && (
        <ProductModal
          product={selectedProduct}
          onClose={() => setSelectedProduct(null)}
          onAddToCart={(product) => {
            addToCart(product);
            setSelectedProduct(null);
          }}
        />
      )}
      
      {/* Custom Styles */}
      <style jsx>{`
        @keyframes fadeInUp {
          from {
            opacity: 0;
            transform: translateY(30px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }
        
        @keyframes slideUp {
          from {
            opacity: 0;
            transform: translateY(50px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }
        
        @keyframes fadeIn {
          from { opacity: 0; }
          to { opacity: 1; }
        }
        
        @keyframes bounceGentle {
          0%, 100% {
            transform: translateY(0);
          }
          50% {
            transform: translateY(-5px);
          }
        }
        
        @keyframes pulseFlow {
          0%, 100% {
            opacity: 0.3;
            transform: scale(1);
          }
          50% {
            opacity: 0.6;
            transform: scale(1.05);
          }
        }
        
        @keyframes scrollIndicator {
          0% { transform: translateY(0); }
          50% { transform: translateY(5px); }
          100% { transform: translateY(0); }
        }
        
        @keyframes spinReverse {
          from { transform: rotate(360deg); }
          to { transform: rotate(0deg); }
        }
        
        .animate-fade-in-up {
          animation: fadeInUp 0.8s ease-out forwards;
        }
        
        .animate-slide-up {
          animation: slideUp 0.5s ease-out forwards;
        }
        
        .animate-fade-in {
          animation: fadeIn 0.5s ease-out forwards;
        }
        
        .animate-bounce-gentle {
          animation: bounceGentle 3s ease-in-out infinite;
        }
        
        .animate-pulse-slow {
          animation: pulseFlow 4s ease-in-out infinite;
        }
        
        .animate-scroll-indicator {
          animation: scrollIndicator 2s ease-in-out infinite;
        }
        
        .animate-spin-reverse {
          animation: spinReverse 1s linear infinite;
        }
        
        .delay-300 { animation-delay: 300ms; }
        .delay-500 { animation-delay: 500ms; }
        .delay-1000 { animation-delay: 1000ms; }
        .delay-2000 { animation-delay: 2000ms; }
      `}</style>
    </div>
  );
};

export default MainApp